# Start a non-login shell (dont load /etc/bashrc)
set -g default-command "${SHELL}"

set -g remain-on-exit on

# set -g lock-command vlock
# set -g lock-after-time 600

set-option -g history-limit 10000

# https://unix.stackexchange.com/questions/103898/how-to-start-tmux-with-attach-if-a-session-exists
# if run as "tmux attach", create a session if one does not already exist
# new-session -n $HOST

# https://unix.stackexchange.com/questions/15316/how-can-i-move-tmuxs-status-bar-to-the-top
# set-option -g status-position top

# https://stackoverflow.com/questions/6041178/keep-the-windows-name-fixed-in-tmux
# https://github.com/rndusr/stig/issues/49
set-option -g allow-rename on

set -g default-terminal "tmux-256color" # italic, 256color

# https://www.linuxquestions.org/questions/slackware-14/tip-24-bit-true-color-terminal-tmux-vim-4175582631/
set -g terminal-overrides ',xterm-256color:Tc,st-256color:Tc,xterm-termite:Tc,xterm-256color-italic:Tc' # 24-bit-color

set -g mouse on
# set -g @scroll-down-exit-copy-mode 'on'
# set -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'

set -g pane-border-status top
set -g status-style bg=#444444,fg=#bcbcbc
set-window-option -g window-status-style bg=#585858,fg=#a8a8a8
set-window-option -g window-status-current-style bg=#005f5f,fg=#d7d7af,bright
set-window-option -g window-status-current-format " #I [#W#{?window_flags,#{window_flags}, }] "
set-window-option -g window-status-format " #I [#W#{?window_flags,#{window_flags}, }] "
set-window-option -g window-status-separator ""
set -g pane-active-border-style fg=green,bright
set -g pane-border-style fg=#a8a8a8,bright
set -g status-left ""
set -g status-right '#(whoami)@#H |#S'

# remap prefix
# unbind C-b
# set-option -g prefix `
# bind ` send-prefix

# Ctrl+; -> Ctrl+b (alacritty)
# https://stackoverflow.com/questions/30680362/how-to-use-ctrl-semicolon-for-prefix-in-tmux
# CTRL+b  + [ и CTRL+b + Ctrl-[
bind-key C-[ copy-mode

# bind-key 0 display-message "current: #{pane_width}x#{pane_height}, recommends: 80x--(1), 160x--(2), 240x--(3), 320x--(4)"

# https://gist.github.com/tsl0922/d79fc1f8097dde660b34
# Allow the arrow key to be used immediately after changing windows
# set-option -g repeat-time 0

# # https://stackoverflow.com/questions/15470001/bind-ctrltab-and-ctrlshifttab-in-tmux
# bind-key -n C-Tab next-window
# bind-key -n C-S-Tab previous-window

bind-key P swap-window -t -1\; select-window -t -1
bind-key N swap-window -t +1\; select-window -t +1

# select-pane
set-option -g base-index 1
bind-key 0 run "tmux split-window -vfp 30 -t bottom '~/bin/,ftpane'"
bind-key -n C-\\ run "~/bin/,tmux-select-ranger"
bind-key ` last-window

#####

# на основе tmux-plugins/tmux-pain-control
bind-key h   select-pane -L
bind-key C-h select-pane -L
bind-key j   select-pane -D
bind-key C-j select-pane -D
bind-key k   select-pane -U
bind-key C-k select-pane -U
bind-key l   select-pane -R
bind-key C-l select-pane -R
bind-key -r "<" swap-window -d -t -1
bind-key -r ">" swap-window -d -t +1
bind-key -r H resize-pane -L 40
bind-key -r J resize-pane -D 10
bind-key -r K resize-pane -U 10
bind-key -r L resize-pane -R 40

bind-key M-\\ split-window -h -b -c "#{?pane_current_path,#{pane_current_path},#{session_path}}" '$SHELL'
bind-key - split-window -v    -c "#{?pane_current_path,#{pane_current_path},#{session_path}}" '$SHELL'
bind-key M-- split-window -v -b -c "#{?pane_current_path,#{pane_current_path},#{session_path}}" '$SHELL'
bind-key \\ split-window -h    -c "#{?pane_current_path,#{pane_current_path},#{session_path}}" '$SHELL'

bind-key M-| split-window -f -h -b -c "#{?pane_current_path,#{pane_current_path},#{session_path}}" '$SHELL'
bind-key _ split-window -f -v    -c "#{?pane_current_path,#{pane_current_path},#{session_path}}" '$SHELL'
bind-key M-_ split-window -f -v -b -c "#{?pane_current_path,#{pane_current_path},#{session_path}}" '$SHELL'
bind-key | split-window -f -h    -c "#{?pane_current_path,#{pane_current_path},#{session_path}}" '$SHELL'

bind-key "c" new-window -c "#{?pane_current_path,#{pane_current_path},#{session_path}}"

bind-key -T prefix w confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key -T prefix q confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key -T prefix C-w confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key -T prefix C-q confirm-before -p "kill-pane #P? (y/n)" kill-pane

# tmux-plugins/tmux-yank
# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel # tmux-yank
# bind-key C-v paste-buffer

set-environment -g TMUX_PLUGIN_MANAGER_PATH '/usr/local/share/tmux/plugins/'

# List of plugins
# TODO https://github.com/tmux-plugins/tmux-open
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '$TMUX_PLUGIN_MANAGER_PATH/tpm/tpm'
